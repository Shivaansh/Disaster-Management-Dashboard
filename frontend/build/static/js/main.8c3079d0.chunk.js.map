{"version":3,"sources":["components/Home.js","components/Livefeed.js","components/Analysis.js","components/Error.js","App.js","serviceWorker.js","index.js"],"names":["Home","io","props","className","class","React","Component","Livefeed","state","filters","low","medium","high","critical","fire","flood","power","medical","this","setState","push","index","indexOf","splice","objs","posts","filter","word","includes","priority","problem","length","type","id","checked","onChange","flipFire","bind","for","flipFlood","flipPower","flipMedical","flipCrit","flipHigh","flipMed","flipLow","map","name","image","content","key","src","alt","Analysis","lowFire","x","lowFlood","lowPower","lowMedical","lowTotal","mediumFire","mediumFlood","mediumPower","mediumMedical","mediumTotal","highFire","highFlood","highPower","highMedical","highTotal","criticalFire","criticalFlood","criticalPower","criticalMedical","criticalTotal","FireTotal","FloodTotal","PowerTotal","MedicalTotal","total","socket","Error","nextID","on","console","log","data","App","document","body","style","exact","to","activeStyle","fontWeight","color","path","component","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8c3079d0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './../styles/Home.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport io from 'socket.io-client';\r\nconst socket = io('http://localhost:3001');\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>DISASTER DIGEST</h1>\r\n                <br/>\r\n                <br/>\r\n                <h2>Hello, welcome to the Disaster Dashboard!</h2>\r\n                <p>This dashboard consists of 3 main pages:\r\n                <br/>\r\n                <br/>\r\n                <span className=\"descList container\">\r\n                <ul class=\"list-inline d-flex justify-content-center\">\r\n                        <li class=\"list-inline-item text1\">The <label className=\"inLine\">Home</label> page, which is where you currently are.\r\n                        This page gives you a brief description of the application.</li>\r\n                        <li class=\"list-inline-item text2\">The <label className=\"inLine\">Live Feed</label> page, where you can see an AI-curated social \r\n                            media posts pertaining to certain disasters.</li>\r\n                        <li class=\"list-inline-item text1\">The <label className=\"inLine\">Analytics</label> page, where you can see a breakdown of the\r\n                            volume of social media posts across different disaster types and severity, in the form of a helpful table.</li>\r\n                    </ul>\r\n                <br/>\r\n                <h3>Use the navbar at the top of the screen to navigate between\r\n                    different pages\r\n                </h3>\r\n                </span>\r\n                    \r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './../styles/Livefeed.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport io from 'socket.io-client';\r\nconst socket = io('http://localhost:3001');\r\n\r\nclass Livefeed extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //initially showing everything\r\n        this.state = {\r\n            filters: [],\r\n            low: true,\r\n            medium: true,\r\n            high: true,\r\n            critical: true,\r\n            fire: true,\r\n            flood: true,\r\n            power: true,\r\n            medical: true\r\n        }\r\n    }\r\n\r\n    //Possible improvements: \r\n\r\n    // flip visibility of posts of different categories / severity\r\n    flipLow() {\r\n        this.setState({ low: !this.state.low })\r\n        if (!this.state.low) {\r\n            var index = this.state.filters.indexOf(\"Low\")\r\n            this.state.filters.splice(index, 1) //remove one element at index index\r\n        } else {\r\n            this.state.filters.push(\"Low\")\r\n        }\r\n    }\r\n    flipMed() {\r\n        this.setState({ medium: !this.state.medium })\r\n        if (!this.state.medium) {\r\n            var index = this.state.filters.indexOf(\"Medium\")\r\n            this.state.filters.splice(index, 1)\r\n        } else {\r\n            this.state.filters.push(\"Medium\")\r\n        }\r\n    }\r\n    flipHigh() {\r\n        this.setState({ high: !this.state.high })\r\n        if (!this.state.high) {\r\n            var index = this.state.filters.indexOf(\"High\")\r\n            this.state.filters.splice(index, 1)\r\n        } else {\r\n            this.state.filters.push(\"High\")\r\n        }\r\n    }\r\n    flipCrit() {\r\n        this.setState({ critical: !this.state.critical })\r\n        if (!this.state.critical) {\r\n            var index = this.state.filters.indexOf(\"Critical\")\r\n            this.state.filters.splice(index, 1)\r\n        } else {\r\n            this.state.filters.push(\"Critical\")\r\n        }\r\n    }\r\n\r\n    flipFire() {\r\n        this.setState({ fire: !this.state.fire })\r\n        if (!this.state.fire) {\r\n            var index = this.state.filters.indexOf(\"Fire\")\r\n            this.state.filters.splice(index, 1)\r\n        } else {\r\n            this.state.filters.push(\"Fire\")\r\n        }\r\n    }\r\n    flipFlood() {\r\n        this.setState({ flood: !this.state.flood })\r\n        if (!this.state.flood) {\r\n            var index = this.state.filters.indexOf(\"Flood\")\r\n            this.state.filters.splice(index, 1)\r\n        } else {\r\n            this.state.filters.push(\"Flood\")\r\n        }\r\n    }\r\n    flipPower() {\r\n        this.setState({ power: !this.state.power })\r\n        if (!this.state.power) {\r\n            var index = this.state.filters.indexOf(\"Power\")\r\n            this.state.filters.splice(index, 1)\r\n        } else {\r\n            this.state.filters.push(\"Power\")\r\n        }\r\n    }\r\n    flipMedical() {\r\n        this.setState({ medical: !this.state.medical })\r\n        if (!this.state.medical) {\r\n            var index = this.state.filters.indexOf(\"Medical\")\r\n            this.state.filters.splice(index, 1)\r\n        } else {\r\n            this.state.filters.push(\"Medical\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        //Objs is list of posts which have type or severity NOT present in filters array\r\n        var objs = this.props.posts.filter((word) => !(this.state.filters.includes(word.priority) || this.state.filters.includes(word.problem)))\r\n\r\n        return (\r\n            <div>\r\n                <h1>LIVE FEED</h1>\r\n                <p className=\"resultCount\">Total Results: {objs.length} </p>\r\n                <span>\r\n\r\n                    <label className=\"marker\">Problems</label>\r\n\r\n                    {/* Checkboxes for types of disasters */}\r\n                    <input type=\"checkbox\" id=\"fireBox\" checked={this.state.fire}\r\n                        onChange={this.flipFire.bind(this)}\r\n                    />\r\n                    <label className=\"chkbox\" for=\"fireBox\">Fire</label>\r\n\r\n                    <input type=\"checkbox\" id=\"floodBox\" checked={this.state.flood}\r\n                        onChange={this.flipFlood.bind(this)}\r\n                    />\r\n                    <label className=\"chkbox\" for=\"floodBox\">Flood</label>\r\n\r\n                    <input type=\"checkbox\" id=\"powerBox\" checked={this.state.power}\r\n                        onChange={this.flipPower.bind(this)}\r\n                    />\r\n                    <label className=\"chkbox\" for=\"powerBox\">Power</label>\r\n\r\n                    <input type=\"checkbox\" id=\"medBox\" checked={this.state.medical}\r\n                        onChange={this.flipMedical.bind(this)}\r\n                    />\r\n                    <label className=\"chkbox\" for=\"medBox\">Medical</label>\r\n                </span>\r\n\r\n                <br />\r\n\r\n                <span>\r\n                    <label className=\"marker\">Priorities</label>\r\n\r\n                    {/* Checkboxes for different intensities of disasters */}\r\n                    <input type=\"checkbox\" id=\"priorityCritical\" checked={this.state.critical}\r\n                        onChange={this.flipCrit.bind(this)}\r\n                    />\r\n                    <label className=\"chkbox\" for=\"priorityCritical\">Critical</label>\r\n\r\n                    <input type=\"checkbox\" id=\"priorityHigh\" checked={this.state.high}\r\n                        onChange={this.flipHigh.bind(this)}\r\n                    />\r\n                    <label className=\"chkbox\" for=\"priorityHigh\">High</label>\r\n\r\n                    <input type=\"checkbox\" id=\"priorityMedium\" checked={this.state.medium}\r\n                        onChange={this.flipMed.bind(this)}\r\n                    />\r\n                    <label className=\"chkbox\" for=\"priorityMedium\">Medium</label>\r\n\r\n                    <input type=\"checkbox\" id=\"priorityLow\" checked={this.state.low}\r\n                        onChange={this.flipLow.bind(this)}\r\n                    />\r\n                    <label className=\"chkbox\" for=\"priorityLow\">Low</label>\r\n                </span>\r\n\r\n                <hr />\r\n\r\n                {/* Format for a post*/}\r\n                {objs.map(\r\n                    ({ name, image, content, problem, priority, id }) =>\r\n                        <div className=\"post\" key={id}>\r\n\r\n                            <label className=\"bigField\">{content}</label>\r\n                            <div className=\"form-group\">\r\n                                <img src={image} alt=\"{name}\" class=\"float-left\" /> <br />\r\n                                <label className=\"nameField\"> - {name}</label> <br />\r\n                                <label className=\"field\">Problem: </label> {problem} <br />\r\n                                <label className=\"field\">Priority: </label> {priority}\r\n                            </div>\r\n                            <br /> <br /> <hr className=\"postGap\" />\r\n                        </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Livefeed;","import React from 'react';\r\nimport './../styles/Analysis.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport io from 'socket.io-client';\r\nconst socket = io('http://localhost:3001');\r\n\r\nclass Analysis extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        // Count number of posts of each type by filtering array of posts\r\n\r\n        //Possible improvement: could use an array to keep track of these instead of 16 different variables\r\n        //Could use loops to filter out priorities and problems\r\n        //Tradeoff: readability affected. Arrays might be slower to update than individual variables. \r\n        var lowFire = this.props.posts.filter(x => x.priority === \"Low\" && x.problem === \"Fire\").length\r\n        var lowFlood = this.props.posts.filter(x => x.priority === \"Low\" && x.problem === \"Flood\").length\r\n        var lowPower = this.props.posts.filter(x => x.priority === \"Low\" && x.problem === \"Power\").length\r\n        var lowMedical = this.props.posts.filter(x => x.priority === \"Low\" && x.problem === \"Medical\").length\r\n        var lowTotal = (lowFire + lowFlood + lowPower + lowMedical)\r\n\r\n        var mediumFire = this.props.posts.filter(x => x.priority === \"Medium\" && x.problem === \"Fire\").length\r\n        var mediumFlood = this.props.posts.filter(x => x.priority === \"Medium\" && x.problem === \"Flood\").length\r\n        var mediumPower = this.props.posts.filter(x => x.priority === \"Medium\" && x.problem === \"Power\").length\r\n        var mediumMedical = this.props.posts.filter(x => x.priority === \"Medium\" && x.problem === \"Medical\").length\r\n        var mediumTotal = (mediumFire + mediumFlood + mediumPower + mediumMedical)\r\n\r\n        var highFire = this.props.posts.filter(x => x.priority === \"High\" && x.problem === \"Fire\").length\r\n        var highFlood = this.props.posts.filter(x => x.priority === \"High\" && x.problem === \"Flood\").length\r\n        var highPower = this.props.posts.filter(x => x.priority === \"High\" && x.problem === \"Power\").length\r\n        var highMedical = this.props.posts.filter(x => x.priority === \"High\" && x.problem === \"Medical\").length\r\n        var highTotal = (highFire + highFlood + highPower + highMedical)\r\n\r\n        var criticalFire = this.props.posts.filter(x => x.priority === \"Critical\" && x.problem === \"Fire\").length\r\n        var criticalFlood = this.props.posts.filter(x => x.priority === \"Critical\" && x.problem === \"Flood\").length\r\n        var criticalPower = this.props.posts.filter(x => x.priority === \"Critical\" && x.problem === \"Power\").length\r\n        var criticalMedical = this.props.posts.filter(x => x.priority === \"Critical\" && x.problem === \"Medical\").length\r\n        var criticalTotal = (criticalFire + criticalFlood + criticalPower + criticalMedical)\r\n\r\n        var FireTotal = (lowFire + mediumFire + highFire + criticalFire)\r\n        var FloodTotal = (lowFlood + mediumFlood + highFlood + criticalFlood)\r\n        var PowerTotal = (lowPower + mediumPower + highPower + criticalPower)\r\n        var MedicalTotal = (lowMedical + mediumMedical + highMedical + criticalMedical)\r\n        var total = (FireTotal + FloodTotal + MedicalTotal + PowerTotal)\r\n\r\n        return (\r\n            <div>\r\n                <h1>ANALYTICS</h1>\r\n                <br/>\r\n                <h6>Here you can see the breakdown of the number of tweets,\r\n                    their problem categories and priority.\r\n                </h6>\r\n                <table>\r\n                    {/* Header Row */}\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Fire</th>\r\n                        <th>Flood</th>\r\n                        <th>Power</th>\r\n                        <th>Medical</th>\r\n                        <th className=\"total\">Total</th>\r\n                    </tr>\r\n                    {/* Data Rows */}\r\n                    <tr>\r\n                        <td>Low Priority</td>\r\n                        <td>{lowFire}</td>\r\n                        <td>{lowFlood}</td>\r\n                        <td>{lowPower}</td>\r\n                        <td>{lowMedical}</td>\r\n                        <td className=\"total\">{lowTotal}</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Medium Priority</td>\r\n                        <td>{mediumFire}</td>\r\n                        <td>{mediumFlood}</td>\r\n                        <td>{mediumPower}</td>\r\n                        <td>{mediumMedical}</td>\r\n                        <td className=\"total\">{mediumTotal}</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>High Priority</td>\r\n                        <td>{highFire}</td>\r\n                        <td>{highFlood}</td>\r\n                        <td>{highPower}</td>\r\n                        <td>{highMedical}</td>\r\n                        <td className=\"total\">{highTotal}</td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Critical Priority</td>\r\n                        <td>{criticalFire}</td>\r\n                        <td>{criticalFlood}</td>\r\n                        <td>{criticalPower}</td>\r\n                        <td>{criticalMedical}</td>\r\n                        <td className=\"total\">{criticalTotal}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"total\">Total</td>\r\n                        <td className=\"total\">{FireTotal}</td>\r\n                        <td className=\"total\">{FloodTotal}</td>\r\n                        <td className=\"total\">{PowerTotal}</td>\r\n                        <td className=\"total\">{MedicalTotal}</td>\r\n                        <td className=\"total\">{total}</td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Analysis;","import React from 'react';\r\n\r\nimport io from 'socket.io-client';\r\nconst socket = io('http://localhost:3001');\r\n\r\nclass Error extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // An array of social media posts messages, and we'll increment nextID\r\n        // to maintain a unique ID for each post in our array\r\n        this.state = { posts: [], nextID: 0 };\r\n\r\n        // We can setup the event handlers for the messages in the constructor...\r\n        socket.on('connect', function () {\r\n\r\n            console.log(\"Connect....\");\r\n\r\n            // When we receive a social media message, call setState and insert \r\n            // it into the array of posts\r\n            socket.on('post',\r\n\r\n                function (data) {\r\n\r\n                    // Can uncomment this to see the raw data coming in...\r\n                    // console.log(\"post: \" + JSON.stringify(data));\r\n\r\n                    // increment the next unique ID, and put post data into the list of \r\n                    // posts... use the '...' syntax to make this insertion easier:\r\n                    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax \r\n                    this.setState(\r\n                        {\r\n                            posts: [...this.state.posts,\r\n                            {\r\n                                name: data.name,\r\n                                image: data.image,\r\n                                content: data.content,\r\n                                problem: data.problem,\r\n                                priority: data.priority,\r\n                                id: this.state.nextID\r\n                            }]\r\n                            , nextID: this.state.nextID + 1\r\n                        });\r\n                }.bind(this));\r\n            // ^^ Like other event handlers, we bind the callback function to the \r\n            // component so we can use setState        \r\n\r\n        }.bind(this));\r\n        // ^^ ... And same with the callback function for when a connection is made\r\n\r\n    }\r\n\r\n    // Output all the posts into a table\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>ERROR PAGE</h2>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Error;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\nimport Home from './components/Home'\nimport Livefeed from './components/Livefeed'\nimport Analysis from './components/Analysis'\nimport Error from './components/Error'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/App.css';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:3001');\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    document.body.style = 'background: #49515e';\n    this.state = { posts: [], nextID: 0 };\n    socket.on('connect', function () {\n\n      console.log(\"Connect....\");\n      socket.on('post',\n\n        function (data) {\n          this.setState(\n            {\n              //... spread operator: applies function to all contents in array \n              //Here: append a new dictionary to array posts.\n              //posts is set to current contents + new dictionary\n              posts: [...this.state.posts,\n              {\n                name: data.name,\n                image: data.image,\n                content: data.content,\n                problem: data.problem,\n                priority: data.priority,\n                id: this.state.nextID\n              }]\n              , nextID: this.state.nextID + 1 //increment next ID\n            });\n        }.bind(this));\n    }.bind(this));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <nav>\n            <ul>\n              <p> \n                {/* these are just the buttons in the navbar */}\n                <NavLink className=\"btn\" exact to=\"/\" activeStyle={{\n                  fontWeight: \"bold\",\n                  color: \"#36c2f5\"\n                }}>Home</NavLink >\n\n                <NavLink className=\"btn\" to=\"/components/livefeed\" activeStyle={{\n                  fontWeight: \"bold\",\n                  color: \"#36c2f5\"\n                }}>Live Feed</NavLink >\n\n                <NavLink className=\"btn\" to=\"/components/Analysis\" activeStyle={{\n                  fontWeight: \"bold\",\n                  color: \"#36c2f5\"\n                }}>Analytics</NavLink >\n              </p>\n            </ul>\n          </nav>\n          <Switch>\n\n            <Route exact path=\"/\" component={Home}>\n              <Home />\n            </Route>\n\n            <Route path=\"/components/livefeed\" render={(props) => <Livefeed {...props}\n              posts={this.state.posts} />} />\n\n            <Route path=\"/components/analysis\" render={(props) => <Analysis {...props}\n              posts={this.state.posts} />} />\n            {/* Added error path for robustness, prevents crashing of webapp, useful for extension */}\n            <Route path=\"*\">\n              <Error />\n            </Route>\n\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// To make app work offline, change unregister() to register() below. \n// NOTE: This might cause errors.\nserviceWorker.unregister();\n"],"sourceRoot":""}